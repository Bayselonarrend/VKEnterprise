
#Область РаботаСГруппой

Функция СоздатьПост(Знач Текст, Знач МассивКартинок, Знач Рекламный = Ложь, Знач СсылкаПодЗаписью = "", Знач Параметры = "") Экспорт
		
	_Параметры  	  = ПолучитьСтандартныеПараметры(Параметры);
	СтрокаВложений  = "";	
		
	Для Каждого КартинкаПоста Из МассивКартинок Цикл
		
		Файлы = Новый Соответствие;
		Файлы.Вставить("photo", ?(ТипЗнч(КартинкаПоста) = Тип("Строка"), Новый ДвоичныеДанные(КартинкаПоста), КартинкаПоста));
		
		Ответ 	= Инструменты.Get("api.vk.com/method/photos.getWallUploadServer", _Параметры);
		URL 	  = Ответ["response"]["upload_url"];
		
		_Параметры.Вставить("upload_url", URL);
				
		Ответ		= Инструменты.Post(URL, _Параметры, Файлы);
		СерверФото  = СтрЗаменить(Строка(Ответ["server"]), Символы.НПП, "");
		
		_Параметры.Вставить("hash"		, Ответ["hash"]);
		_Параметры.Вставить("photo"		, Ответ["photo"]);
		_Параметры.Вставить("server"	, СерверФото);
		
		Ответ  				      = Инструменты.Get("api.vk.com/method/photos.saveWallPhoto", _Параметры);
		ОтветСоответствие 	= Ответ.Получить("response")[0];
		
		_Параметры.Удалить("hash");
		_Параметры.Удалить("photo");
		_Параметры.Удалить("server");
		
		ФотоID = "photo" 
		+  СтрЗаменить(Строка(ОтветСоответствие.Получить("owner_id")), Символы.НПП, "") 
		+ "_" 
		+   СтрЗаменить(Строка(ОтветСоответствие.Получить("id")), Символы.НПП, "");
		
		СтрокаВложений = СтрокаВложений + ФотоID + ",";
		
	КонецЦикла;

	СтрокаВложений = СтрокаВложений + СсылкаПодЗаписью;
	
	_Параметры.Вставить("message"   		  , Текст);
	_Параметры.Вставить("attachments"		  , СтрокаВложений);
	_Параметры.Вставить("mark_as_ads"		  , ?(Рекламный, 1, 0));
	_Параметры.Вставить("close_comments"	, ?(Рекламный, 1, 0));

	Ответ	= Инструменты.Get("api.vk.com/method/wall.post", _Параметры);
	
	Возврат Ответ;
	
КонецФункции

Функция УдалитьПост(Знач ID, Знач Параметры = "") Экспорт
	
	_Параметры  = ПолучитьСтандартныеПараметры(Параметры);	
	_Параметры.Вставить("post_id"	, ID);
	
	Ответ = Инструменты.Get("api.vk.com/method/wall.delete", _Параметры);
	
	Возврат Ответ;
	
КонецФункции

Функция СоздатьОпрос(Знач Вопрос, Знач МассивОтветов, Знач Картинка = "", Знач Параметры = "") Экспорт
	
	_Параметры  = ПолучитьСтандартныеПараметры(Параметры);
	Ответ 		  = Инструменты.Get("api.vk.com/method/polls.getPhotoUploadServer", _Параметры);
	URL 		    = Ответ["response"]["upload_url"];	
	
	_Параметры.Вставить("upload_url", URL);

	Если ТипЗнч(Картинка) = Тип("Строка") Тогда
		Картинка = Новый ДвоичныеДанные(Картинка);
	КонецЕсли;
	
	Файлы = Новый Соответствие;
	Файлы.Вставить("photo", Картинка);
	
	Ответ = Инструменты.Post(URL, _Параметры, Файлы);
	
	
	_Параметры.Вставить("hash"		, Ответ["hash"]);
	_Параметры.Вставить("photo"		, Ответ["photo"]);
	
	Ответ  				      = Инструменты.Get("api.vk.com/method/polls.savePhoto", _Параметры);
	ОтветСоответствие 	= Ответ.Получить("response")["id"];
	
	_Параметры.Вставить("is_anonymous"	, 1);
	_Параметры.Вставить("is_multiple"	, 0);
		
	Ответы = "[";
	Первый	= Истина;
	
	Для Каждого Ответ Из МассивОтветов Цикл
		
		Если Первый Тогда 
			Первый = Ложь 
		Иначе 
			Ответы = Ответы + ", "; 
		КонецЕсли;
		
		Ответы = Ответы + """"+ Ответ + """";
		
	КонецЦикла;
	
	Ответы = Ответы + "]";
	
	_Параметры.Вставить("add_answers"	, Ответы);
	_Параметры.Вставить("photo_id"		, СтрЗаменить(Строка(ОтветСоответствие), Символы.НПП, ""));
	_Параметры.Вставить("question"		, Вопрос);
	
	Опрос 				      = Инструменты.Get("api.vk.com/method/polls.create", _Параметры);
	ОпросСоответствие 	= Опрос.Получить("response");
	
	ОпросID = "poll"
	+  СтрЗаменить(Строка(ОпросСоответствие.Получить("owner_id")), Символы.НПП, "") 
	+ 	"_" 
	+   СтрЗаменить(Строка(ОпросСоответствие.Получить("id")), Символы.НПП, "");

	
	_Параметры.Вставить("attachments", ОпросID);
	
	Ответ = Инструменты.Get("api.vk.com/method/wall.post", _Параметры);
	
	Возврат Ответ;
	
КонецФункции

Функция ПолучитьСтатистику(Знач ДатаНачала, Знач ДатаОкончания, Знач Параметры = "") Экспорт
	
	_Параметры  	  = ПолучитьСтандартныеПараметры(Параметры);
	
	ДатаНачала 		  = Формат(ДатаНачала 	- Дата(1970,1,1,1,0,0), "ЧГ=0");
	ДатаОкончания 	= Формат(ДатаОкончания 	- дата(1970,1,1,1,0,0), "ЧГ=0");
	
	_Параметры.Вставить("timestamp_from"	, ДатаНачала);
	_Параметры.Вставить("timestamp_to"	  , ДатаОкончания);
	_Параметры.Вставить("stats_groups"	  , "visitors, reach, activity");
	
	Ответ	= Инструменты.Get("api.vk.com/method/stats.get", _Параметры);
	
	Возврат Ответ;
	
КонецФункции

#КонецОбласти



#Область Прочие

Функция СократитьСсылку(Знач URL) Экспорт
	
	_Параметры = Новый Структура;
	_Параметры = ПолучитьСтандартныеПараметры();	
	_Параметры.Вставить("url"	, URL);
	
	Ответ = Инструменты.Get("https://api.vk.com/method/utils.getShortLink", _Параметры);
	
	Возврат Ответ["response"]["short_url"];
	
КонецФункции

#КонецОбласти



#Область ПолучениеТокена

Функция СоздатьСсылкуПолученияТокена(Знач app_id) Экспорт
	
	//access_token нужно будет забрать из параметра в строке адреса браузера
	Возврат "https://oauth.vk.com/authorize?client_id=" + app_id
		+ "&scope=offline,wall,groups,photos,stats,ads&v=5.60&response_type=token&redirect_uri=https://api.vk.com/blank.html";
		
КонецФункции
 
#КонецОбласти



#Область Служебные

Функция ПолучитьСтандартныеПараметры(Знач Параметры = "")
	
	_Параметры = Новый Структура;
	
	_Параметры.Вставить("access_token"	, "vk1.a.E-");
	_Параметры.Вставить("from_group"	  , "1");
	_Параметры.Вставить("owner_id"		  , "-123456789");
	_Параметры.Вставить("v"				      , "5.131");
	_Параметры.Вставить("app_id"		    , "87654321");
	_Параметры.Вставить("group_id"		  , "123456789");
	
	Если ТипЗнч(Параметры) = Тип("Структура") Тогда
		Для Каждого ПереданныйПараметр Из Параметры Цикл
			_Параметры.Вставить(ПереданныйПараметр.Ключ, ПереданныйПараметр.Значение);
		КонецЦикла;
	КонецЕсли;

	Возврат _Параметры;

КонецФункции

#КонецОбласти
