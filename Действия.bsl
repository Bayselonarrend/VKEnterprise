//MIT License

//Copyright (c) 2023 Anton Tsitavets

//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:

//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.

//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//SOFTWARE.

#Область РаботаСГруппой

Функция СоздатьПост(Знач Текст, Знач МассивКартинок, Знач Рекламный = Ложь, Знач СсылкаПодЗаписью = "", Знач Параметры = "") Экспорт
        
    _Параметры      = ПолучитьСтандартныеПараметры(Параметры);
    СтрокаВложений  = "";    
        
    Для Каждого КартинкаПоста Из МассивКартинок Цикл
        
        Файлы = Новый Соответствие;
        Файлы.Вставить("photo", ?(ТипЗнч(КартинкаПоста) = Тип("Строка"), Новый ДвоичныеДанные(КартинкаПоста), КартинкаПоста));
        
        Ответ     = Инструменты.Get("api.vk.com/method/photos.getWallUploadServer", _Параметры);
        URL       = Ответ["response"]["upload_url"];
        
        _Параметры.Вставить("upload_url", URL);
                
        Ответ        = Инструменты.Post(URL, _Параметры, Файлы);
        СерверФото   = Инструменты.ЧислоВСтроку(Ответ["server"]);
        
        _Параметры.Вставить("hash"        , Ответ["hash"]);
        _Параметры.Вставить("photo"       , Ответ["photo"]);
        _Параметры.Вставить("server"      , СерверФото);
        
        Ответ                  = Инструменты.Get("api.vk.com/method/photos.saveWallPhoto", _Параметры);
        ОтветСоответствие      = Ответ.Получить("response")[0];
        
        _Параметры.Удалить("hash");
        _Параметры.Удалить("photo");
        _Параметры.Удалить("server");
        
        ФотоID = "photo" 
        +  Инструменты.ЧислоВСтроку(ОтветСоответствие.Получить("owner_id"))
        + "_" 
        +     Инструменты.ЧислоВСтроку(ОтветСоответствие.Получить("id"));
        
        СтрокаВложений = СтрокаВложений + ФотоID + ",";
        
    КонецЦикла;

    СтрокаВложений = СтрокаВложений + СсылкаПодЗаписью;
    
    _Параметры.Вставить("message"            , Текст);
    _Параметры.Вставить("attachments"        , СтрокаВложений);
    _Параметры.Вставить("mark_as_ads"        , ?(Рекламный, 1, 0));
    _Параметры.Вставить("close_comments"     , ?(Рекламный, 1, 0));

    Ответ = Инструменты.Get("api.vk.com/method/wall.post", _Параметры);
    
    Возврат Ответ;
    
КонецФункции

Функция УдалитьПост(Знач ID, Знач Параметры = "") Экспорт
    
    _Параметры  = ПолучитьСтандартныеПараметры(Параметры);    
    _Параметры.Вставить("post_id", Инструменты.ЧислоВСтроку(ID));
    
    Ответ = Инструменты.Get("api.vk.com/method/wall.delete", _Параметры);
    
    Возврат Ответ;
    
КонецФункции

Функция СоздатьОпрос(Знач Вопрос, Знач МассивОтветов, Знач Картинка = "", Знач Параметры = "") Экспорт
    
    _Параметры    = ПолучитьСтандартныеПараметры(Параметры);
    Ответ         = Инструменты.Get("api.vk.com/method/polls.getPhotoUploadServer", _Параметры);
    URL           = Ответ["response"]["upload_url"];    
    
    _Параметры.Вставить("upload_url", URL);

    Если Не Картинка = "" Тогда
        
        Если ТипЗнч(Картинка) = Тип("Строка") Тогда
            Картинка = Новый ДвоичныеДанные(Картинка);
        КонецЕсли;
        
        Файлы = Новый Соответствие;
        Файлы.Вставить("photo", Картинка);
        
    КонецЕсли;
    
    Ответ = Инструменты.Post(URL, _Параметры, Файлы);
     
    _Параметры.Вставить("hash"         , Ответ["hash"]);
    _Параметры.Вставить("photo"        , Ответ["photo"]);
    
    Ответ                  = Инструменты.Get("api.vk.com/method/polls.savePhoto", _Параметры);
    ОтветСоответствие      = Ответ.Получить("response")["id"];
    
    _Параметры.Вставить("is_anonymous"    , 1);
    _Параметры.Вставить("is_multiple"     , 0);
        
    Ответы     = "[";
    Первый     = Истина;
    
    Для Каждого Ответ Из МассивОтветов Цикл
        
        Если Первый Тогда 
            Первый = Ложь 
        Иначе 
            Ответы = Ответы + ", "; 
        КонецЕсли;
        
        Ответы = Ответы + """"+ Ответ + """";
        
    КонецЦикла;
    
    Ответы = Ответы + "]";
    
    _Параметры.Вставить("add_answers"     , Ответы);
    _Параметры.Вставить("photo_id"        , Инструменты.ЧислоВСтроку(ОтветСоответствие));
    _Параметры.Вставить("question"        , Вопрос);
    
    Опрос                 = Инструменты.Get("api.vk.com/method/polls.create", _Параметры);
    ОпросСоответствие     = Опрос.Получить("response");
    
    ОпросID = "poll"
    +     Инструменты.ЧислоВСтроку(ОпросСоответствие.Получить("owner_id"))
    +     "_" 
    +     Инструменты.ЧислоВСтроку(ОпросСоответствие.Получить("id"));

    
    _Параметры.Вставить("attachments", ОпросID);
    
    Ответ = Инструменты.Get("api.vk.com/method/wall.post", _Параметры);
    
    Возврат Ответ;
    
КонецФункции

Функция СоздатьАльбом(Знач Наименование, Знач Описание = "", Знач Параметры = "") Экспорт
    
    _Параметры      = ПолучитьСтандартныеПараметры(Параметры);
    
    _Параметры.Вставить("title"                , Наименование);
    _Параметры.Вставить("description"          , Описание);
    _Параметры.Вставить("upload_by_admins_only", 1);
    
    Ответ    = Инструменты.Get("api.vk.com/method/photos.createAlbum", _Параметры);
    
    Возврат Ответ;
    
КонецФункции

Функция СоздатьИсторию(Знач Картинка, Знач URL = "", Знач Параметры = "") Экспорт
        
    _Параметры      = ПолучитьСтандартныеПараметры(Параметры);
    _Параметры.Вставить("link_text"        , "more");
    _Параметры.Вставить("link_url"         , URL);
    _Параметры.Вставить("add_to_news"      , "1");
    
    Ответ    = Инструменты.Get("api.vk.com/method/stories.getPhotoUploadServer", _Параметры);    
    URL      = Ответ["response"]["upload_url"];
        
    _Параметры.Вставить("upload_url", URL);
    
    Если Не ТипЗнч(Картинка) = Тип("ДвоичныеДанные") Тогда
        Картинка = Новый ДвоичныеДанные(Картинка);
    КонецЕсли;
    
    Файлы = Новый Соответствие;
    Файлы.Вставить("photo", Картинка);

    Ответ = Инструменты.Post(URL, _Параметры, Файлы);    
    _Параметры.Вставить("upload_results", Ответ["response"]["upload_result"]);
    
    Ответ = Инструменты.Get("api.vk.com/method/stories.save", _Параметры);
    
    Возврат Ответ;
    
КонецФункции

Функция СохранитьКартинкуВАльбом(Знач IDАльбома, Знач Картинка, Знач Описание = "", Знач Параметры = "") Экспорт
    
    _Параметры      = ПолучитьСтандартныеПараметры(Параметры);
    
    _Параметры.Вставить("album_id"        , Инструменты.ЧислоВСтроку(IDАльбома));
    _Параметры.Вставить("caption"         , Описание);
    
    Ответ     = Инструменты.Get("api.vk.com/method/photos.getUploadServer", _Параметры);
    URL       = Ответ["response"]["upload_url"];
    
    Если Не ТипЗнч(Картинка) = Тип("ДвоичныеДанные") Тогда
        Картинка = Новый ДвоичныеДанные(Картинка);
    КонецЕсли;
    
    Файлы = Новый Соответствие;
    Файлы.Вставить("photo", Картинка);

    ОтветАльбома = Инструменты.Post(URL, _Параметры, Файлы);    

    _Параметры.Вставить("server"          , Инструменты.ЧислоВСтроку(ОтветАльбома["server"]));
    _Параметры.Вставить("photos_list"     , ОтветАльбома["photos_list"]);
    _Параметры.Вставить("hash"            , ОтветАльбома["hash"]);
    _Параметры.Вставить("aid"             , ОтветАльбома["aid"]);
    
    Ответ = Инструменты.Get("api.vk.com/method/photos.save", _Параметры);
    
    Возврат Ответ;
    
КонецФункции

Функция УдалитьКартинку(Знач IDКартинки, Знач Параметры = "") Экспорт
    
    _Параметры  = ПолучитьСтандартныеПараметры(Параметры);
    _Параметры.Вставить("photo_id", Инструменты.ЧислоВСтроку(IDКартинки));
    
    Ответ = Инструменты.Get("api.vk.com/method/photos.delete", _Параметры);
    
    Возврат Ответ;
    
КонецФункции
#КонецОбласти


#Область РаботаСОбсуждениями

Функция СоздатьОбсуждение(Знач Наименование, Знач ТекстПервогоСообщения, Знач Параметры = "") Экспорт
    
    _Параметры      = ПолучитьСтандартныеПараметры(Параметры);
    _Параметры.Вставить("title"    , Наименование);
    _Параметры.Вставить("text"     , ТекстПервогоСообщения);
    
    Ответ = Инструменты.Get("api.vk.com/method/board.addTopic", _Параметры);
    
    Возврат Ответ;
    
КонецФункции

Функция ЗакрытьОбсуждение(Знач IDОбсуждения, Знач УдалитьПолностью = Ложь, Знач Параметры = "") ЭКспорт
    
    _Параметры  = ПолучитьСтандартныеПараметры(Параметры);
    _Параметры.Вставить("topic_id", Инструменты.ЧислоВСтроку(IDОбсуждения));
    
    Метод = ?(УдалитьПолностью, "deleteTopic", "closeTopic");
    
    Ответ = Инструменты.Get("api.vk.com/method/board." + Метод, _Параметры);
    
    Возврат Ответ;

КонецФункции

Функция ОткрытьОбсуждение(Знач IDОбсуждения, Знач Параметры = "") ЭКспорт
    
    _Параметры  = ПолучитьСтандартныеПараметры(Параметры);
    _Параметры.Вставить("topic_id", Инструменты.ЧислоВСтроку(IDОбсуждения));
    
    Ответ = Инструменты.Get("api.vk.com/method/board.openTopic", _Параметры);
    
    Возврат Ответ;

КонецФункции

Функция НаписатьВОбсуждение(Знач IDОбсуждения, Знач Текст, Знач Параметры = "") Экспорт
    
    _Параметры  = ПолучитьСтандартныеПараметры(Параметры);
    _Параметры.Вставить("topic_id"    , Инструменты.ЧислоВСтроку(IDОбсуждения));
    _Параметры.Вставить("message"     , Текст);
    
    Ответ = Инструменты.Get("api.vk.com/method/board.createComment", _Параметры);
    
    Возврат Ответ;

КонецФункции

#КонецОбласти



#Область ИнтерактивныеДействия

Функция ПоставитьЛайк(Знач IDПоста, Знач IDСтены = "", Знач Параметры = "") Экспорт
    
    _Параметры      = ПолучитьСтандартныеПараметры(Параметры);
    IDСтены         = ?(ЗначениеЗаполнено(IDСтены), IDСтены, _Параметры["group_id"]);
    
    _Параметры.Вставить("type"        , "post");
    _Параметры.Вставить("object"      , "wall" + Инструменты.ЧислоВСтроку(IDСтены) + "_" + Инструменты.ЧислоВСтроку(IDПоста));
    _Параметры.Вставить("item_id"     , Инструменты.ЧислоВСтроку(IDПоста));
    _Параметры.Вставить("owner_id"    , Инструменты.ЧислоВСтроку(IDСтены));
    
    Ответ = Инструменты.Get("api.vk.com/method/likes.add", _Параметры);
    
    Возврат Ответ;

КонецФункции

Функция СделатьРепост(Знач IDПоста, Знач IDСтены = "", Знач ЦелеваяСтена = "", Знач Рекламный = Ложь, Знач Параметры = "") Экспорт
    
    _Параметры  = ПолучитьСтандартныеПараметры(Параметры);

    Источник = ?(ЗначениеЗаполнено(IDСтены)		, Инструменты.ЧислоВСтроку(IDСтены), Инструменты.ЧислоВСтроку(_Параметры["owner_id"]));
    Приемник = ?(ЗначениеЗаполнено(ЦелеваяСтена), СтрЗаменить(Инструменты.ЧислоВСтроку(ЦелеваяСтена), "-", ""), Инструменты.ЧислоВСтроку(_Параметры["group_id"]));

    _Параметры.Вставить("object"          , "wall" + Источник + "_" + Инструменты.ЧислоВСтроку(IDПоста));
    _Параметры.Вставить("group_id"        , Приемник);
    _Параметры.Вставить("mark_as_ads"     , ?(Рекламный, 1, 0));
    
    Ответ = Инструменты.Get("api.vk.com/method/wall.repost", _Параметры);
    
    Возврат Ответ;

КонецФункции

Функция НаписатьСообщение(Знач Текст, Знач IDПользователя, Знач communitytoken, Знач Клавиатура = "", Знач Параметры = "") Экспорт
    
    _Параметры  = ПолучитьСтандартныеПараметры(Параметры);
    _Параметры.Вставить("access_token", communitytoken);
    
    _Параметры.Вставить("user_id", Инструменты.ЧислоВСтроку(IDПользователя));
    _Параметры.Вставить("peer_id", Инструменты.ЧислоВСтроку(IDПользователя));
    
    _Параметры.Вставить("random_id", 0);
    _Параметры.Вставить("message"  , Текст);
    
    Если ЗначениеЗаполнено(Клавиатура) Тогда
        _Параметры.Вставить("keyboard", Клавиатура);
    КонецЕсли;
    
    Ответ = Инструменты.Get("api.vk.com/method/messages.send", _Параметры);
    
    Возврат Ответ;

КонецФункции

Функция НаписатьКомментарий(Знач IDПоста, Знач IDСтены = "", Знач Текст, Знач Параметры = "") Экспорт
    
    _Параметры = ПолучитьСтандартныеПараметры(Параметры);
    
    Если ЗначениеЗаполнено(IDСтены) Тогда
        _Параметры.Вставить("owner_id", Инструменты.ЧислоВСтроку(IDСтены));
    КонецЕсли;
    
    _Параметры.Вставить("from_group" , Инструменты.ЧислоВСтроку(_Параметры["group_id"]));
    _Параметры.Вставить("post_id"    , Инструменты.ЧислоВСтроку(IDПоста));
    _Параметры.Вставить("message"    , Текст);
    
    _Параметры.Удалить("group_id");
    
    Ответ    = Инструменты.Get("api.vk.com/method/wall.createComment", _Параметры);
    
    Возврат Ответ;

КонецФункции

#КонецОбласти

#Область Статистика

Функция ПолучитьСтатистику(Знач ДатаНачала, Знач ДатаОкончания, Знач Параметры = "") Экспорт
    
    _Параметры         = ПолучитьСтандартныеПараметры(Параметры);
    
    ДатаНачала         = Формат(ДатаНачала        - Дата(1970,1,1,1,0,0), "ЧГ=0");
    ДатаОкончания      = Формат(ДатаОкончания     - дата(1970,1,1,1,0,0), "ЧГ=0");
    
    _Параметры.Вставить("timestamp_from"      , ДатаНачала);
    _Параметры.Вставить("timestamp_to"        , ДатаОкончания);
    _Параметры.Вставить("stats_groups"        , "visitors, reach, activity");
    
    Ответ    = Инструменты.Get("api.vk.com/method/stats.get", _Параметры);
    
    Возврат Ответ;
    
КонецФункции

Функция ПолучитьСтатистикуПостов(Знач МассивIDПостов, Знач Параметры = "") Экспорт
    
    _Параметры       = ПолучитьСтандартныеПараметры(Параметры);
    МассивОтветов    = Новый Массив;
    МассивНабора     = Новый Массив;
    
    Для Каждого Пост Из МассивIDПостов Цикл
        
        МассивНабора.Добавить(Инструменты.ЧислоВСтроку(Пост));
        
        Если МассивНабора.Количество() = 30 Тогда
            
            СтрокаНомеров = СтрСоединить(МассивНабора, ",");
            _Параметры.Вставить("post_ids", СтрокаНомеров);
            
            Статистика             = Инструменты.Get("api.vk.com/method/stats.getPostReach", _Параметры);
            МассивСтатистики       = Статистика["response"];
            
            Для Каждого ЭлементСтатистики Из МассивСтатистики Цикл
                МассивОтветов.Добавить(ЭлементСтатистики);
            КонецЦикла;
            
            МассивНабора = Новый Массив
        КонецЕсли;
        
    КонецЦикла;
    
    СтрокаНомеров = СтрСоединить(МассивНабора, ",");
    _Параметры.Вставить("post_ids", СтрокаНомеров);
    
    Статистика             = Инструменты.Get("api.vk.com/method/stats.getPostReach", _Параметры);
    МассивСтатистики       = Статистика["response"];
    
    Для Каждого ЭлементСтатистики Из МассивСтатистики Цикл
        МассивОтветов.Добавить(ЭлементСтатистики);
    КонецЦикла;

    Возврат МассивОтветов;
    
КонецФункции
        
#КонецОбласти



#Область РаботаСРекламнымКабинетом

Функция СоздатьРекламнуюКампанию(Знач IDКабинета, Знач Наименование, Знач Параметры = "") Экспорт
    
    _Параметры      = ПолучитьСтандартныеПараметры(Параметры);    
    _Параметры.Вставить("account_id"        , Инструменты.ЧислоВСтроку(IDКабинета));
    
    МассивСтруктур = Новый Массив;
    
    СтруктураКампании = Новый Структура;
    СтруктураКампании.Вставить("type"            , "promoted_posts");
    СтруктураКампании.Вставить("name"            , Наименование);
    СтруктураКампании.Вставить("day_limit"       , 0);
    СтруктураКампании.Вставить("all_limit"       , 0);
    СтруктураКампании.Вставить("start_time"      , Формат(ТекущаяДатаСеанса() - Дата(1970,1,1,1,0,0), "ЧГ=0"));
    СтруктураКампании.Вставить("stop_time"       , Формат('2120.01.01' - Дата(1970,1,1,1,0,0), "ЧГ=0"));
    СтруктураКампании.Вставить("status"          , 1);
    
    МассивСтруктур.Добавить(СтруктураКампании);
    
    JSONДата = Инструменты.JSONСтрокой(МассивСтруктур);
    
    _Параметры.Вставить("data", JSONДата);
    
    Ответ    = Инструменты.Get("api.vk.com/method/ads.createCampaigns", _Параметры);
    
    Возврат Ответ;
    
КонецФункции

Функция СоздатьРекламноеОбъявление(Знач НомерКампании, Знач ДневнойЛимит, Знач НомерКатегории, Знач IDПоста, Знач IDКабинета, Знач Параметры = "") Экспорт
    
    _Параметры          = ПолучитьСтандартныеПараметры(Параметры);
    
    МассивСтруктур        = Новый Массив;    
    СтруктураКампании     = Новый Структура;
    СтруктураКампании.Вставить("campaign_id"                , Инструменты.ЧислоВСтроку(НомерКампании));
    СтруктураКампании.Вставить("ad_format"                  , 9);
    СтруктураКампании.Вставить("conversion_event_id"        , 1);
    СтруктураКампании.Вставить("autobidding"                , 1);
    СтруктураКампании.Вставить("cost_type"                  , 3);
    СтруктураКампании.Вставить("goal_type"                  , 2);
    СтруктураКампании.Вставить("ad_platform"                , "all");
    СтруктураКампании.Вставить("publisher_platforms"        , "vk");
    СтруктураКампании.Вставить("publisher_platforms_auto"   , "1");
    СтруктураКампании.Вставить("day_limit"                  , Инструменты.ЧислоВСтроку(ДневнойЛимит));
    СтруктураКампании.Вставить("all_limit"                  , "0");
    СтруктураКампании.Вставить("category1_id"               , Инструменты.ЧислоВСтроку(НомерКатегории));
    СтруктураКампании.Вставить("age_restriction"            , 0);
    СтруктураКампании.Вставить("status"                     , 1);
    СтруктураКампании.Вставить("name"                       , "Объявление");
    СтруктураКампании.Вставить("link_url"                   , "https://vk.com/wall-" + _Параметры["group_id"] + "_" + Инструменты.ЧислоВСтроку(IDПоста));
    
    МассивСтруктур.Добавить(СтруктураКампании);
    
    JSONДата = Инструменты.JSONСтрокой(МассивСтруктур);
    
    _Параметры.Вставить("data"        , JSONДата);
    _Параметры.Вставить("account_id"  , Инструменты.ЧислоВСтроку(IDКабинета));
    
    Ответ    = Инструменты.Get("api.vk.com/method/ads.createAds", _Параметры);
    
    Возврат Ответ;
    
КонецФункции

Функция ПриостановитьРекламноеОбъявление(Знач IDКабинета, Знач IDОбъявления, Знач Параметры = "") Экспорт
    
    _Параметры = ПолучитьСтандартныеПараметры(Параметры);

    _Параметры.Вставить("account_id", Инструменты.ЧислоВСтроку(IDКабинета));
    
    МассивСтруктур         = Новый Массив;    
    СтруктураКампании      = Новый Структура;
    СтруктураКампании.Вставить("ad_id"  , Инструменты.ЧислоВСтроку(IDОбъявления));
    СтруктураКампании.Вставить("status" , 0);
    
    МассивСтруктур.Добавить(СтруктураКампании);
    
    JSONДата = Инструменты.JSONСтрокой(МассивСтруктур);
    
    _Параметры.Вставить("data", JSONДата);
        
    Ответ = Инструменты.Get("api.vk.com/method/ads.updateAds", _Параметры);
    
    Возврат Ответ;
    
КонецФункции

Функция ИзменитьЗаписьРекламногоОбъявления(Знач IDПоста, Знач IDКабинета, Знач IDОбъявления, Знач Параметры = "") Экспорт
    
    _Параметры = ПолучитьСтандартныеПараметры(Параметры);
    
    _Параметры.Вставить("account_id", Инструменты.ЧислоВСтроку(IDКабинета));
    
    МассивСтруктур         = Новый Массив;    
    СтруктураКампании      = Новый Структура;
    СтруктураКампании.Вставить("ad_id"         , Инструменты.ЧислоВСтроку(IDОбъявления));
    СтруктураКампании.Вставить("status"        , 1);
    СтруктураКампании.Вставить("link_url"      , "https://vk.com/wall-" + _Параметры["group_id"] + "_" + Инструменты.ЧислоВСтроку(IDПоста));
    
    МассивСтруктур.Добавить(СтруктураКампании);
    
    JSONДата = Инструменты.JSONСтрокой(МассивСтруктур);
    
    _Параметры.Вставить("data", JSONДата);
    
    Ответ    = Инструменты.Get("api.vk.com/method/ads.updateAds", _Параметры);
    
    Возврат Ответ;

    
КонецФункции

#КонецОбласти



#Область Прочие

Функция СократитьСсылку(Знач URL, Знач Параметры = "") Экспорт
    
    _Параметры = Новый Структура;
    _Параметры = ПолучитьСтандартныеПараметры(Параметры);    
    _Параметры.Вставить("url", URL);
    
    Ответ = Инструменты.Get("https://api.vk.com/method/utils.getShortLink", _Параметры);
    
    Возврат Ответ["response"]["short_url"];
    
КонецФункции

#КонецОбласти



#Область ПолучениеТокена

Функция СоздатьСсылкуПолученияТокена(Знач app_id) Экспорт
    
    //access_token нужно будет забрать из параметра в строке адреса браузера
    Возврат "https://oauth.vk.com/authorize?client_id=" + app_id
        + "&scope=offline,wall,groups,photos,stats,stories,ads&v=5.131&response_type=token&redirect_uri=https://api.vk.com/blank.html";
        
КонецФункции
 
#КонецОбласти



#Область Служебные

Функция ПолучитьСтандартныеПараметры(Знач Параметры = "")
    
    _Параметры = Новый Структура;
    
    _Параметры.Вставить("access_token"  , "vk1.a.E-");
    _Параметры.Вставить("from_group"    , "1");
    _Параметры.Вставить("owner_id"      , "-123456789");
    _Параметры.Вставить("v"             , "5.131");
    _Параметры.Вставить("app_id"        , "87654321");
    _Параметры.Вставить("group_id"      , "123456789");
    
    Если ТипЗнч(Параметры) = Тип("Структура") Тогда
        Для Каждого ПереданныйПараметр Из Параметры Цикл
            _Параметры.Вставить(ПереданныйПараметр.Ключ, Инструменты.ЧислоВСтроку(ПереданныйПараметр.Значение));
        КонецЦикла;
    КонецЕсли;

    Возврат _Параметры;

КонецФункции

Функция СформироватьКлавиатуру(Знач МассивКнопок) Экспорт
        
    Клавиатура          = Новый Структура;
    МассивКлавиатуры    = Новый Массив;
    МассивБлока         = Новый Массив;
    
    Для Каждого Действие Из МассивКнопок Цикл
        
        Кнопка          = Новый Структура;
        Выражение       = Новый Структура;
        
        Выражение.Вставить("type" , "text");
        Выражение.Вставить("label", Действие);
        
        Кнопка.Вставить("action", Выражение);
        МассивБлока.Добавить(Кнопка);
        
    КонецЦикла;
    
    МассивКлавиатуры.Добавить(МассивБлока);
    
    Клавиатура.Вставить("buttons" , МассивКлавиатуры);    
    Клавиатура.Вставить("one_time", Ложь);
    
    Возврат Инструменты.JSONСтрокой(Клавиатура);
    

КонецФункции

#КонецОбласти
